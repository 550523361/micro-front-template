{"version":3,"sources":["App.js","index.js"],"names":["App","console","log","this","React","Component","bootstrap","a","mount","props","ReactDOM","render","document","getElementById","unmount","unmountComponentAtNode"],"mappings":"sOAWeA,E,iLANX,OADAC,QAAQC,IAAIC,MAEV,kD,GAJYC,IAAMC,WCQjB,SAAeC,IAAtB,+B,4CAAO,sBAAAC,EAAA,sDACLN,QAAQC,IAAI,yBADP,4C,sBAOA,SAAeM,EAAtB,kC,4CAAO,WAAqBC,GAArB,SAAAF,EAAA,sDACLN,QAAQC,IAAI,cAAeO,GAC3BC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SAF5C,4C,sBAQA,SAAeC,IAAtB,+B,4CAAO,sBAAAP,EAAA,sDACLN,QAAQC,IAAI,iBACZQ,IAASK,uBAAuBH,SAASC,eAAe,SAFnD,4C","file":"static/js/main.15d3c7f0.chunk.js","sourcesContent":["import React from 'react';\n\nclass App extends React.Component {\n  render() {\n    console.log(this);\n    return (\n      <section>React App</section>\n    )\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n/**\n * bootstrap 只会在子应用初始化的时候调用一次，下次子应用重新进入时会直接调用 mount 钩子，不会再重复触发 bootstrap。\n * 通常我们可以在这里做一些全局变量的初始化，比如不会在 unmount 阶段被销毁的应用级别的缓存等。\n */\nexport async function bootstrap() {\n  console.log('react app bootstraped');\n}\n\n/**\n * 应用每次进入都会调用 mount 方法，通常我们在这里触发应用的渲染方法\n */\nexport async function mount(props) {\n  console.log(\"react mount\", props);\n  ReactDOM.render(<App />, document.getElementById('root'));\n}\n\n/**\n * 应用每次 切出/卸载 会调用的方法，通常在这里我们会卸载子应用的应用实例\n */\nexport async function unmount() {\n  console.log(\"react unmount\");\n  ReactDOM.unmountComponentAtNode(document.getElementById('root'));\n}"],"sourceRoot":""}